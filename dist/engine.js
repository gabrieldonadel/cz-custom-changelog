"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _wordWrap=_interopRequireDefault(require("word-wrap")),_chalk=require("chalk");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_unsupportedIterableToArray(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function _iterableToArrayLimit(a,b){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var filter=function(a){return a.filter(function(a){return a})},headerLength=function(a){var b=a.type,c=a.scope;return b.length+2+(c?c.length+2:0)},maxSummaryLength=function(a,b){return a.maxHeaderWidth-headerLength(b)},filterSubject=function(a){a=a.trim();var b=a.charAt(0);for(b.toUpperCase()!==b&&(a=b.toUpperCase()+a.slice(1,a.length));a.endsWith(".");)a=a.slice(0,a.length-1);return a},_default=function(a){var b=a.types,c=Object.keys(b).reduce(function(a,b){return b.length>a?b.length:a},0)+1,d=Object.entries(b).map(function(a){var b=_slicedToArray(a,2),d=b[0],e=b[1];return{name:(d+":").padEnd(c)+" "+e.description,value:d}});return{prompter:function prompter(b,c){b.prompt([{type:"list",name:"type",message:"Select the type of change that you're committing:",choices:d,default:a.defaultType},{type:"input",name:"scope",message:"What is the scope of this change (e.g. component or file name): (press enter to skip)",default:a.defaultScope,filter:function(b){return a.disableScopeLowerCase?b.trim():b.trim().toLowerCase()}},{type:"input",name:"subject",message:function message(b){return"Write a short, imperative tense description of the change (max "+maxSummaryLength(a,b)+" chars):\n"},default:a.defaultSubject,validate:function validate(b,c){var d=filterSubject(b);return 0==d.length?"subject is required":!!(d.length<=maxSummaryLength(a,c))||"Subject length must be less than or equal to "+maxSummaryLength(a,c)+" characters. Current length is "+d.length+" characters."},transformer:function transformer(b,c){var d=filterSubject(b),e=d.length<=maxSummaryLength(a,c)?_chalk.green:_chalk.red;return e("(".concat(d.length,") ").concat(b))},filter:filterSubject},{type:"input",name:"body",message:"Provide a longer description of the change: (press enter to skip)\n",default:a.defaultBody},{type:"confirm",name:"isBreaking",message:"Are there any breaking changes?",default:!1},{type:"input",name:"breakingBody",default:"-",message:"A BREAKING CHANGE commit requires a body. Please enter a longer description of the commit itself:\n",when:function when(a){return a.isBreaking&&!a.body},validate:function validate(a){return 0<a.trim().length||"Body is required for BREAKING CHANGE"}},{type:"input",name:"breaking",message:"Describe the breaking changes:\n",when:function when(a){return a.isBreaking}},{type:"confirm",name:"isIssueAffected",message:"Does this change affect any open issues?",default:!!a.defaultIssues},{type:"input",name:"issuesBody",default:"-",message:"If issues are closed, the commit requires a body. Please enter a longer description of the commit itself:\n",when:function when(a){return a.isIssueAffected&&!a.body&&!a.breakingBody}},{type:"input",name:"issues",message:"Add issue references (e.g. \"fix #123\", \"re #123\".):\n",when:function when(a){var b=a.isIssueAffected;return b},default:a.defaultIssues?a.defaultIssues:void 0}]).then(function(b){var d={trim:!0,cut:!1,newline:"\n",indent:"",width:a.maxLineWidth},e=b.scope?"("+b.scope+")":"",f=b.type+e+": "+b.subject,g=!!b.body&&(0,_wordWrap["default"])(b.body,d),h=!1;// parentheses are only needed when a scope is present
b.breaking&&b.breaking.trim()&&(h=(0,_wordWrap["default"])("BREAKING CHANGE: "+b.breaking.trim().replace(/^BREAKING CHANGE: /,""),d));var i=!!b.issues&&(0,_wordWrap["default"])(b.issues,d);c(filter([f,g,h,i]).join("\n\n"))})}}};exports["default"]=_default;